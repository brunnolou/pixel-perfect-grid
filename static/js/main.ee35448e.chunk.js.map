{"version":3,"sources":["serviceWorker.js","Column/index.js","BadNumber/BadNumber.js","ColumnData/ColumnData.js","Grid/Grid.js","Square/Square.js","Pill/index.js","utils/index.js","Container/Container.js","BadNumber/IsGood.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Column","_ref","_ref$padding","padding","margin","width","style","props","Object","objectWithoutProperties","react_default","a","createElement","assign","objectSpread","marginLeft","marginRight","BadNumber","styled","div","_templateObject","number","baseUnit","_ref2","bg","defaultProps","P","p","ColumnData_templateObject","ColumnData","x","division","size","isArr","Array","isArray","BadNumber_BadNumber","Math","round","Grid","Grid_templateObject","height","_ref3","_ref4","_ref5","color","_ref6","Square","Square_templateObject","unit","Pill","Pill_templateObject","per","range","n","times","arguments","length","undefined","scale","fill","map","_","i","pow","isGood","Flex","Container_templateObject","ContainerStyled","_templateObject2","Container","children","position","maxWidth","opacity","Number","isInteger","IsGood","IsGood_templateObject","App","_useState","useState","_useState2","slicedToArray","setBaseUnit","_useState3","_useState4","containerUnit","setContainerUnit","_useState5","_useState6","containerMargin","setMargin","spacings","expo","roundSpacing","filter","slice","reverse","gutter","className","onChange","e","target","value","type","min","max","step","BadNumber_IsGood","src_Pill","w","Grid_Grid","marginBottom","containerSize","src_ColumnData_ColumnData","by","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","Square_Square","title","space","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8FChBS,SAASC,EAATC,GAMZ,IAAAC,EAAAD,EALDE,eAKC,IAAAD,EAAA,GAAAA,EAJDE,EAICH,EAJDG,OACAC,EAGCJ,EAHDI,MACAC,EAECL,EAFDK,MACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,sCACD,OACES,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CACEP,MAAKE,OAAAM,EAAA,EAAAN,CAAA,CACHH,QACAF,UACAY,WAAYX,EACZY,YAAaZ,GACVE,IAEDC,+TChBV,IAAMU,EAAYC,IAAOC,IAAVC,IACF,SAAAnB,GAAA,OAAAA,EAAGoB,OAAHpB,EAAWqB,WAAsC,EAAI,GAAM,GACnD,SAAAC,GAAA,OAAAA,EAAGC,KAKxBP,EAAUQ,aAAe,CACvBH,SAAU,GAGGL,mGCTR,IAEDS,EAAIR,IAAOS,EAAVC,KA0BQC,EAtBI,SAAA5B,GAA2C,IANzC6B,EAMCzB,EAAwCJ,EAAxCI,MAAO0B,EAAiC9B,EAAjC8B,SAAU3B,EAAuBH,EAAvBG,OAAQkB,EAAerB,EAAfqB,SACzCU,EAAO,EACLC,EAAQC,MAAMC,QAAQJ,GAQ5B,OALAC,EADIC,EACG5B,EAAQ0B,EAAS,GAAKA,EAAS,GAAc,EAAT3B,EAElCC,EAAQ0B,EAAoB,EAAT3B,EAI1BM,EAAAC,EAAAC,cAACwB,EAAD,CAAWf,OAAQW,EAAMV,SAAUA,EAAUE,GAAI,WAC/Cd,EAAAC,EAAAC,cAACc,EAAD,KACGO,EAAQF,EAAS,GAAK,IAAMA,EAAS,GAAK,MAAQA,EACnDrB,EAAAC,EAAAC,cAAA,YApBakB,EAqBNE,EArBWK,KAAKC,MAAU,IAAJR,GAAW,KAkB1C,KAIEpB,EAAAC,EAAAC,cAAA,6TCxBR,IAAM2B,EAAOrB,IAAOC,IAAVqB,IAEC,SAAAvC,GAAA,OAAAA,EAAGI,OACF,SAAAkB,GAAA,OAAAA,EAAGkB,QAEM,SAAAC,GAAA,OAAAA,EAAGV,MAAqB,SAAAW,GAAA,OAAAA,EAAGX,MAG1C,SAAAY,GAAA,OAAAA,EAAGC,OAGe,SAAAC,GAAA,OAAAA,EAAGD,QAG3BN,EAAKd,aAAe,CAClBoB,MAAO,uBAGMN,0OClBf,IAAMQ,EAAS7B,IAAOC,IAAV6B,IACD,SAAA/C,GAAA,OAAAA,EAAG+B,MACF,SAAAT,GAAA,OAAAA,EAAGS,MACC,SAAAU,GAAA,OAAqB,EAArBA,EAAGO,MACG,SAAAN,GAAA,OAAAA,EAAGE,OACR,SAAAD,GAAA,OAAAA,EAAGK,MACD,SAAAH,GAAA,OAAqB,EAArBA,EAAGG,OAItBF,EAAOtB,aAAe,CACpBoB,MAAO,WAGME,qMCZf,IAQeG,EARFhC,IAAOC,IAAVgC,KCGGC,EAAM,SAAAtB,GAAC,OAAQ,IAAJA,EAAU,KACrBuB,EAAQ,SAACC,GAAD,IAAIC,EAAJC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAY,EAAGG,EAAfH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAuB,EAAvB,OACnBtB,MAAMoB,GACHM,OACAC,IAAI,SAACC,EAAGC,GAAJ,OAAU1B,KAAKC,MAAMyB,EAAIR,EAAJlB,KAAA2B,IAAYL,EAASI,OAEtCE,EAAS,SAAAnC,GAAC,OAAIA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAAKA,EAAI,IAAM,wOCTnE,IAAMoC,EAAOhD,IAAOC,IAAVgD,KAKJC,EAAkBlD,IAAOC,IAAVkD,KAIN,SAASC,EAATrE,GAAgD,IAA3BG,EAA2BH,EAA3BG,OAAQC,EAAmBJ,EAAnBI,MAAOkE,EAAYtE,EAAZsE,SACjD,OACE7D,EAAAC,EAAAC,cAACwD,EAAD,CACE9D,MAAO,CACLkE,SAAU,WACVpE,OAAQ,YACRC,MAAO,OACPoE,SAAUpE,IAGZK,EAAAC,EAAAC,cAACsD,EAAD,CACE5D,MAAO,CACLS,YAAsB,EAAVX,EACZY,aAAuB,EAAVZ,IAGdmE,GAGC7D,EAAAC,EAAAC,cAAA,SACEN,MAAO,CACLoE,QAAST,EAAO5D,GAAS,EAAIsE,OAAOC,UAAUvE,GAAS,GAAM,KAG9DA,uHClCb,IAAMwE,EAAS3D,IAAOC,IAAV2D,IACC,SAAA7E,GAAA,IAAGoB,EAAHpB,EAAGoB,OAAH,OAAkB4C,EAAO5C,GAAgB,EAAN,IAC1B,SAAAE,GAAA,OAAAA,EAAGC,KAGzBqD,EAAOpD,aAAe,CACpBH,SAAU,GAGGuD,QCgVAE,MA/Uf,WAAe,IAAAC,EACmBC,mBAAS,GAD5BC,EAAA1E,OAAA2E,EAAA,EAAA3E,CAAAwE,EAAA,GACN1D,EADM4D,EAAA,GACIE,EADJF,EAAA,GAAAG,EAG6BJ,mBAAS,IAHtCK,EAAA9E,OAAA2E,EAAA,EAAA3E,CAAA6E,EAAA,GAGNE,EAHMD,EAAA,GAGSE,EAHTF,EAAA,GAAAG,EAIwBR,mBAAS,GAJjCS,EAAAlF,OAAA2E,EAAA,EAAA3E,CAAAiF,EAAA,GAINE,EAJMD,EAAA,GAIWE,EAJXF,EAAA,GAOPG,EAAWxC,EALM,IAKgB/B,EAAU,GAE3CwE,EAAOzC,EAPU,IAOY,EAAG,MAEhC0C,EAAeF,EAClBhC,IAAI,SAACC,EAAGC,GAAJ,OAAUzC,EAAWuE,EAAS9B,EAAIwB,KACtCS,OAAO/B,GACPgC,MAAM,EAAG,GACTC,UAEG9F,EAASyF,EAASF,GAClBQ,EAAkB,EAAT/F,EAEf,OACEM,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,OACb1F,EAAAC,EAAAC,cAAA,SAAOwF,UAAU,SACf1F,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEyF,SAAU,SAAAC,GAAC,OAAIlB,EAAYT,OAAO2B,EAAEC,OAAOC,SAC3CC,KAAK,SACLC,IAAI,IACJC,IAAI,KACJC,KAAK,IACLJ,MAAOlF,MAKbZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACiG,EAAD,CAAQxF,OAAQkE,EAAgBjE,EAAWA,GACzCZ,EAAAC,EAAAC,cAAA,SACEyF,SAAU,SAAAC,GAAC,OAAId,EAAiBb,OAAO2B,EAAEC,OAAOC,SAChDC,KAAK,SACLC,IAAI,IACJC,IA5CO,IA6CPH,MAAOjB,OAaf7E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEyF,SAAU,SAAAC,GAAC,OAAIV,EAAUjB,OAAO2B,EAAEC,OAAOC,SACzCC,KAAK,SACLC,IAAI,IACJC,IAjES,IAkETH,MAAOb,KAGXjF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkG,EAAD,KAAOX,EAAP,UAMPJ,EAAalC,IAAI,SAAAkD,GAAC,OACjBrG,EAAAC,EAAAC,cAACoG,EAAD,CAAMhF,KAAMV,EAAUjB,MAAO0G,EAAa,EAATZ,EAAY1D,OAAQ,QACnD/B,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,EAAa,EAATZ,GACpCzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACGmG,EAAa,EAATZ,EACLzF,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAAA,gCAAiC,EAATuF,EAAxB,QAGJzF,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,EAAIZ,GACpCzF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKmG,EAAIZ,KACNA,GACDzF,EAAAC,EAAAC,cAAA,sDAC4CuF,EAAS,EADrD,QAONzF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKN,MAAO,CAAE2G,aAAc,KAC1BvG,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO0G,EAAa,EAATZ,GAC5BzF,EAAAC,EAAAC,cAACwB,EAAD,CAAWf,OAAQ0F,EAAa,EAATZ,EAAY3E,GAAI,WACpCuF,EAAa,EAATZ,KAKXzF,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO0G,EAAIZ,GACjCzF,EAAAC,EAAAC,cAACwB,EAAD,CAAWf,OAAQ0F,EAAIZ,EAAQ3E,GAAI,WAChCuF,EAAIZ,IAIR,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAItC,IAAI,SAAA5D,GAAc,IAAAsB,EAAAf,OAAA2E,EAAA,EAAA3E,CAAAP,EAAA,GAAZ6B,EAAYP,EAAA,GAATJ,EAASI,EAAA,GAEtD2F,EAAgBpF,IADDiF,EAAIZ,GAAUhF,EAAMgF,IACArE,EAAI,GAAKqE,EAClD,OACEzF,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAChCrG,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO6G,GAC7BxG,EAAAC,EAAAC,cAACwB,EAAD,CAAWf,OAAQ6F,EAAe1F,GAAI,WACnC0F,OAOXxG,EAAAC,EAAAC,cAAA,2BACCmG,EAAI,MACHrG,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIlD,IAAI,SAAA/B,GAAC,OACrDpB,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO+C,EAAI,EAAItB,IACrCpB,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAUD,EACV1B,OAAQA,EACRkB,SAAUA,QAOnByF,EAAI,KACHrG,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGlD,IAAI,SAAA/B,GAAC,OACvBpB,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO+C,EAAI,EAAItB,IACrCpB,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAUD,EACV1B,OAAQA,EACRkB,SAAUA,QAOnByF,EAAI,KACHrG,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,EAAG,EAAG,EAAG,GAAGlD,IAAI,SAAA/B,GAAC,OACjBpB,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO+C,EAAI,EAAItB,IACrCpB,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAUD,EACV1B,OAAQA,EACRkB,SAAUA,QAOnByF,EAAI,KACHrG,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,EAAG,EAAG,GAAGlD,IAAI,SAAA/B,GAAC,OACdpB,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO+C,EAAI,EAAItB,IACrCpB,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAUD,EACV1B,OAAQA,EACRkB,SAAUA,QAOpBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,EAAG,GAAGlD,IAAI,SAAA/B,GAAC,OACXpB,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQA,EAAQC,MAAO+C,EAAI,EAAItB,IACrCpB,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAUD,EACV1B,OAAQA,EACRkB,SAAUA,QAMlBZ,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAAnB,GAAA,IAAAC,EAAAnC,OAAA2E,EAAA,EAAA3E,CAAAkC,EAAA,GAAEZ,EAAFa,EAAA,GAAKyE,EAALzE,EAAA,UACpBjC,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,QAKlBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAAjB,GAAA,IAAAE,EAAAtC,OAAA2E,EAAA,EAAA3E,CAAAoC,EAAA,GAAEd,EAAFgB,EAAA,GAAKsE,EAALtE,EAAA,UACpBpC,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,QAKlBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAAwD,GAAA,IAAAC,EAAA9G,OAAA2E,EAAA,EAAA3E,CAAA6G,EAAA,GAAEvF,EAAFwF,EAAA,GAAKF,EAALE,EAAA,UACpB5G,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,QAKlBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAA0D,GAAA,IAAAC,EAAAhH,OAAA2E,EAAA,EAAA3E,CAAA+G,EAAA,GAAEzF,EAAF0F,EAAA,GAAKJ,EAALI,EAAA,UACpB9G,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,QAKlBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAA4D,GAAA,IAAAC,EAAAlH,OAAA2E,EAAA,EAAA3E,CAAAiH,EAAA,GAAE3F,EAAF4F,EAAA,GAAKN,EAALM,EAAA,UAC5BhH,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,QAKlBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAA8D,GAAA,IAAAC,EAAApH,OAAA2E,EAAA,EAAA3E,CAAAmH,EAAA,GAAE7F,EAAF8F,EAAA,GAAKR,EAALQ,EAAA,UAC5BlH,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,QAKlBZ,EAAAC,EAAAC,cAAC0D,EAAD,CAAWlE,OAAQA,EAAQC,MAAO0G,GAC/B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIlD,IAAI,SAAAgE,GAAA,IAAAC,EAAAtH,OAAA2E,EAAA,EAAA3E,CAAAqH,EAAA,GAAE/F,EAAFgG,EAAA,GAAKV,EAALU,EAAA,UAC5BpH,EAAAC,EAAAC,cAACZ,EAAD,CAAQI,OAAQ,EAAGC,MAAO+C,EAAItB,EAAIsF,IAChC1G,EAAAC,EAAAC,cAACuG,EAAD,CACE9G,MAAO0G,EAAIZ,EACXpE,SAAU,CAACD,EAAGsF,GACdhH,OAAQ,EACRkB,SAAUA,SAOpBZ,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAACmH,EAAD,CAAQ/F,KAAMV,EAAW,EAAG2B,KAAM3B,EAAU0G,MAAOjB,GAChD,EADH,MACQrG,EAAAC,EAAAC,cAAA,aAAQU,EAAW,EAAnB,OAGPuE,EAASI,MAAM,EAAG,GAAGpC,IACpB,SAACoE,EAAOlE,GAAR,QACIA,GACArD,EAAAC,EAAAC,cAACmH,EAAD,CAAQ/F,KAAMiG,EAAOhF,KAAM3B,EAAU0G,MAAOjE,GACzCA,EAAI,EADP,MACYrD,EAAAC,EAAAC,cAAA,aAAQqH,EAAR,SAmBjBnC,EAAKG,MAAM,GAAGpC,IACb,SAACoE,EAAOlE,GAAR,QACIA,KACA8B,EAASoC,IACTvH,EAAAC,EAAAC,cAACmH,EAAD,CAAQ/F,KAAM6D,EAASoC,GAAQhF,KAAM3B,EAAU0G,MAAOjE,GACnDA,EAAI,EADP,MACYrD,EAAAC,EAAAC,cAAA,aAAQiF,EAASoC,GAAjB,cC3U5BC,IAASC,OAAOzH,EAAAC,EAAAC,cAACwH,EAAD,MAASC,SAASC,eAAe,SX0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ee35448e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nexport default function Column({\n  padding = ``,\n  margin,\n  width,\n  style,\n  ...props\n}) {\n  return (\n    <div\n      style={{\n        width,\n        padding,\n        marginLeft: margin,\n        marginRight: margin,\n        ...style\n      }}\n      {...props}\n    />\n  );\n}\n","import styled from \"styled-components\";\n\nconst BadNumber = styled.div`\n  opacity: ${({ number, baseUnit }) => (number % baseUnit !== 0 ? 0.5 : 1)};\n\tbackground-color: ${({ bg }) => bg};\n\t/* background-image: linear-gradient(to right, rgba(0,0,0,.1) 0%, transparent 25%, transparent 75%, rgba(0,0,0,.1) 100%); */\n\tbox-shadow: 1px 0px 0px rgba(255,255,255,.8) inset;\n`;\n\nBadNumber.defaultProps = {\n  baseUnit: 1\n};\n\nexport default BadNumber;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BadNumber from \"../BadNumber/BadNumber\";\n\nexport const round = x => Math.round(x * 100) / 100;\n\nconst P = styled.p`\n  padding: 12px 0;\n`;\n\nconst ColumnData = ({ width, division, margin, baseUnit }) => {\n  let size = 0;\n  const isArr = Array.isArray(division);\n\n  if (isArr) {\n\t\tsize = width * division[0] / division[1] - margin * 2;\n  } else {\n    size = width / division - margin * 2;\n  }\n\n  return (\n    <BadNumber number={size} baseUnit={baseUnit} bg={\"#4DD4E0\"}>\n      <P>\n        {isArr ? division[0] + \"/\" + division[1] : '1 /' + division}\n        <br />\n        {round(size)}px\n        <br />\n      </P>\n    </BadNumber>\n  );\n};\n\nexport default ColumnData;\n","import styled from \"styled-components\";\n\nconst Grid = styled.div`\n  position: relative;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  margin: 0 auto;\n  background-size: ${({ size }) => size}px ${({ size }) => size}px;\n  background-image: linear-gradient(\n    to right,\n    ${({ color }) => color} 1px,\n    transparent 1px\n  );\n  box-shadow: 1px 0 0 ${({ color }) => color};\n`;\n\nGrid.defaultProps = {\n  color: \"rgba(0, 0, 0, 0.05)\"\n};\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nconst Square = styled.div`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  max-height: ${({ unit }) => unit * 8}px;\n  background-color: ${({ color }) => color};\n  margin-left: ${({ unit }) => unit}px;\n  margin-bottom: ${({ unit }) => unit * 2}px;\n  white-space: nowrap;\n`;\n\nSquare.defaultProps = {\n  color: \"#4DD4E0\"\n};\n\nexport default Square;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst Pill = styled.div`\n\tborder: 1px solid #eee;\n\tpadding: 3px 6px;\n\tborder-radius: 3px;\n\tfont-size: 12px;\n\tfont-family: monospace;\n`;\n\nexport default Pill;\n","import fibonacciArray from \"./fibonacciArray\";\n\n// export const range = (n, times = 1, scale = 1) =>\n//   Array(n)\n//     .fill()\n//     .map((_, i) => Math.round((i + 1) * times * scale ** i));\n\nexport const per = x => x * 100 + \"%\";\nexport const range = (n, times = 1, scale = 1) =>\n  Array(n)\n    .fill()\n    .map((_, i) => Math.round(i * times * scale ** i));\n\nexport const isGood = x => x % 2 === 0 && x % 3 === 0 && x % 4 === 0;\nexport const fibScale = baseUnit => fibonacciArray.map(x => x * baseUnit);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { isGood } from \"../utils\";\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ContainerStyled = styled.div`\n  background: rgba(100, 100, 100, 0.1);\n`;\n\nexport default function Container({ margin, width, children }) {\n  return (\n    <ContainerStyled\n      style={{\n        position: \"relative\",\n        margin: \"12px auto\",\n        width: \"100%\",\n        maxWidth: width\n      }}\n    >\n      <Flex\n        style={{\n          marginLeft: margin * -1,\n          marginRight: margin * -1\n        }}\n      >\n        {children ? (\n          children\n        ) : (\n          <small\n            style={{\n              opacity: isGood(width) ? 1 : Number.isInteger(width) ? 0.5 : 0.2\n            }}\n          >\n            {width}\n          </small>\n        )}\n      </Flex>\n    </ContainerStyled>\n  );\n}\n","import styled from \"styled-components\";\nimport { isGood } from \"../utils\";\n\nconst IsGood = styled.div`\n  opacity: ${({ number }) => (!isGood(number) ? 0.5 : 1)};\n  background-color: ${({ bg }) => bg};\n`;\n\nIsGood.defaultProps = {\n  baseUnit: 1\n};\n\nexport default IsGood;\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Column from \"./Column\";\nimport ColumnData from \"./ColumnData/ColumnData\";\nimport Grid from \"./Grid/Grid\";\nimport Square from \"./Square/Square\";\nimport Pill from \"./Pill\";\nimport BadNumber from \"./BadNumber/BadNumber\";\nimport { fibScale, range, isGood, per } from \"./utils\";\nimport Container from \"./Container/Container\";\nimport IsGood from \"./BadNumber/IsGood\";\n\nfunction App() {\n  const [baseUnit, setBaseUnit] = useState(6);\n  const spacingsLength = 32 * 8;\n  const [containerUnit, setContainerUnit] = useState(39);\n  const [containerMargin, setMargin] = useState(3);\n\n  // const fibSpacings = fibScale(baseUnit, 1);\n  const spacings = range(spacingsLength, baseUnit, 1);\n\n  const expo = range(spacingsLength, 1, 1.09);\n\n  const roundSpacing = spacings\n    .map((_, i) => baseUnit * spacings[i + containerUnit])\n    .filter(isGood)\n    .slice(0, 1)\n    .reverse();\n\n  const margin = spacings[containerMargin];\n  const gutter = margin * 2;\n\n  return (\n    <div className=\"App\">\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <th>Base unit: </th>\n            <td>\n              <input\n                onChange={e => setBaseUnit(Number(e.target.value))}\n                type=\"number\"\n                min=\"0\"\n                max=\"50\"\n                step=\"2\"\n                value={baseUnit}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <th>Container: </th>\n            <td>\n              <IsGood number={containerUnit * baseUnit * baseUnit}>\n                <input\n                  onChange={e => setContainerUnit(Number(e.target.value))}\n                  type=\"number\"\n                  min=\"0\"\n                  max={spacingsLength}\n                  value={containerUnit}\n                />\n              </IsGood>\n            </td>\n            {/* <td>\n              {!isGood(containerUnit * baseUnit * baseUnit) ? (\n                <del>{containerUnit * baseUnit * baseUnit + gutter}</del>\n              ) : (\n                containerUnit * baseUnit * baseUnit + gutter\n              )}\n            </td> */}\n          </tr>\n\n          <tr>\n            <th>Gutter</th>\n            <td>\n              <input\n                onChange={e => setMargin(Number(e.target.value))}\n                type=\"number\"\n                min=\"0\"\n                max={spacingsLength}\n                value={containerMargin}\n              />\n            </td>\n            <td>\n              <Pill>{gutter}px</Pill>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {roundSpacing.map(w => (\n        <Grid size={baseUnit} width={w + gutter * 2} height={\"auto\"}>\n          <Container margin={margin} width={w + gutter * 2}>\n            <div>\n              <p>\n                {w + gutter * 2}\n                <small>px</small>\n              </p>\n              <small>With 2 gutters: {gutter * 2}px</small>\n            </div>\n          </Container>\n          <Container margin={margin} width={w + gutter}>\n            <center>\n              <h1>{w + gutter}</h1>\n              {!!gutter && (\n                <small>\n                  With half gutter on each side: 2 &times; {gutter / 2}px\n                </small>\n              )}\n            </center>\n          </Container>\n\n          <h1>Containers size</h1>\n          <div style={{ marginBottom: 12 }}>\n            <Column margin={0} width={w + gutter * 2}>\n              <BadNumber number={w + gutter * 2} bg={\"#4DD4E0\"}>\n                {w + gutter * 2}\n              </BadNumber>\n            </Column>\n          </div>\n\n          <Column margin={margin} width={w + gutter}>\n            <BadNumber number={w + gutter} bg={\"#4DD4E0\"}>\n              {w + gutter}\n            </BadNumber>\n          </Column>\n\n          {[[1, 1], [10, 12], [2, 3], [1, 2], [1, 3]].map(([x, div]) => {\n            const columnWidth = (w + gutter) / div - gutter;\n            const containerSize = x * columnWidth + (x - 1) * gutter;\n            return (\n              <Container margin={margin} width={w}>\n                <Column margin={margin} width={containerSize}>\n                  <BadNumber number={containerSize} bg={\"#4DD4E0\"}>\n                    {containerSize}\n                  </BadNumber>\n                </Column>\n              </Container>\n            );\n          })}\n\n          <h1>Column widths</h1>\n          {w > 1152 && (\n            <Container margin={margin} width={w}>\n              {[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12].map(x => (\n                <Column margin={margin} width={per(1 / x)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={x}\n                    margin={margin}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n          )}\n\n          {w > 540 && (\n            <Container margin={margin} width={w}>\n              {[6, 6, 6, 6, 6, 6].map(x => (\n                <Column margin={margin} width={per(1 / x)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={x}\n                    margin={margin}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n          )}\n\n          {w > 360 && (\n            <Container margin={margin} width={w}>\n              {[4, 4, 4, 4].map(x => (\n                <Column margin={margin} width={per(1 / x)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={x}\n                    margin={margin}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n          )}\n\n          {w > 324 && (\n            <Container margin={margin} width={w}>\n              {[3, 3, 3].map(x => (\n                <Column margin={margin} width={per(1 / x)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={x}\n                    margin={margin}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n          )}\n\n          <Container margin={margin} width={w}>\n            {[2, 2].map(x => (\n              <Column margin={margin} width={per(1 / x)}>\n                <ColumnData\n                  width={w + gutter}\n                  division={x}\n                  margin={margin}\n                  baseUnit={baseUnit}\n                />\n              </Column>\n            ))}\n          </Container>\n\n          <section>\n            <h1>Layout</h1>\n            <Container margin={margin} width={w}>\n              {[[1, 6], [5, 6]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n            <Container margin={margin} width={w}>\n              {[[1, 4], [3, 4]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n            <Container margin={margin} width={w}>\n              {[[1, 3], [2, 3]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n            <Container margin={margin} width={w}>\n              {[[1, 2], [1, 2]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n            <Container margin={margin} width={w}>\n              {[[1, 3], [1, 3], [1, 3]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n            <Container margin={margin} width={w}>\n              {[[1, 4], [2, 4], [1, 4]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n            <Container margin={margin} width={w}>\n              {[[1, 6], [4, 6], [1, 6]].map(([x, by]) => (\n                <Column margin={0} width={per(x / by)}>\n                  <ColumnData\n                    width={w + gutter}\n                    division={[x, by]}\n                    margin={0}\n                    baseUnit={baseUnit}\n                  />\n                </Column>\n              ))}\n            </Container>\n          </section>\n\n          <h1>Spacing</h1>\n\n          <Square size={baseUnit / 2} unit={baseUnit} title={w}>\n            {1} - <small>{baseUnit / 2}px</small>\n          </Square>\n\n          {spacings.slice(0, 8).map(\n            (space, i) =>\n              !!i && (\n                <Square size={space} unit={baseUnit} title={i}>\n                  {i + 1} - <small>{space}px</small>\n                </Square>\n              )\n          )}\n\n          {/* {[[1, 1], [10, 12], [2, 3], [1, 2], [1, 3], [1, 6], [1, 12]]\n            .reverse()\n            .map(([x, div], index) => {\n              const columnWidth = (i + gutter) / div - gutter;\n              const containerSize = x * columnWidth + (x - 1) * gutter;\n              return (\n                <>\n                  <Square size={containerSize} unit={baseUnit} title={index}>\n                    {index + 7} - <small>{containerSize}px</small>\n                  </Square>\n                </>\n              );\n            })} */}\n\n          {expo.slice(5).map(\n            (space, i) =>\n              !!i &&\n              !!spacings[space] && (\n                <Square size={spacings[space]} unit={baseUnit} title={i}>\n                  {i + 8} - <small>{spacings[space]}px</small>\n                </Square>\n              )\n          )}\n        </Grid>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n// import FibonacciGrid from './FibonacciGrid';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<FibonacciGrid />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}